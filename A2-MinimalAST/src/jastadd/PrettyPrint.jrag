import java.io.PrintStream;

aspect PrettyPrint {
	public void ASTNode.prettyPrint(PrintStream out) {
		prettyPrint(out, "");
		out.println();
	}

	public void ASTNode.prettyPrint(PrintStream out, String ind) {
		for (int i = 0; i < getNumChild(); ++i) {
			getChild(i).prettyPrint(out, ind);
		}
	}

	public void Program.prettyPrint(PrintStream out, String ind) {
		for(int i = 0; i<getNumFunction(); ++i) {
			getFunction(i).prettyPrint(out, ind);
			out.println();
		}
	}

	public void Function.prettyPrint(PrintStream out, String ind) {
		getIdDecl.prettyPrint(out,ind);
		out.print("(");
		for(int i = 0; i<getNumParmas(); ++i) {
			getParams(i).prettyPrint(out,ind);
			out.print(", ");
		}
		out.println(") {");

		for(int i = 0; i<getNumBlock(); ++i) {
			out.print(ind + "  ");
			getBlock(i).prettyPrint(out, ind);
			out.println();
		}
		out.print(ind + "}");
	}

	public void Add.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" + ");
		getRight().prettyPrint(out, ind);
	}

	public void Sub.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" - ");
		getRight().prettyPrint(out, ind);
	}

	public void Mul.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" * ");
		getRight().prettyPrint(out, ind);
	}

	public void Mod.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" % ");
		getRight().prettyPrint(out, ind);
	}

	public void LessThan.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" < ");
		getRight().prettyPrint(out, ind);
	}

	public void GreaterThan.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" > ");
		getRight().prettyPrint(out, ind);
	}
	public void LessThanEq.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" <= ");
		getRight().prettyPrint(out, ind);
	}
	public void GreaterThanEq.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" >= ");
		getRight().prettyPrint(out, ind);
	}
	public void NotEq.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" != ");
		getRight().prettyPrint(out, ind);
	}
	public void Equals.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" == ");
		getRight().prettyPrint(out, ind);
	}

	public void Numeral.prettyPrint(PrintStream out, String ind) {
		out.print(getNUMERAL());
	}

	public void IdUse.prettyPrint(PrintStream out, String ind) {
		out.print(getID());
	}

	public void IdDecl.prettyPrint(PrintStream out, String ind) {
		out.print(getTYPE() + " " + getID());
	}

	public void ForStmt.prettyPrint(PrintStream out, String ind) {
		out.print("for(");
		if(hasA()) out.print(getA());
		out.print("; ")
		if(hasB()) out.print(getB());
		out.print("; ")
		if(hasC()) out.print(getC());
		out.println(") {")
		for (int i = 0; i < getNumStmt(); ++i) {
			out.print(ind+"  ");
			getStmt(i).prettyPrint(out, ind+"  ");
			out.println();
		}
		out.print(ind + "}");
	}

	public void WhileStmt.prettyPrint(PrintStream out, String ind) {
		out.print("while(");
		getCondition().prettyPrint(out,ind);
		out.println(") {");
		for(int i = 0; i<getNumStmt(); ++i) {
			out.print(ind + "  ");
			getStmt(i).prettyPrint(out, ind+"  ");
			out.println();
		}
		out.print(ind + "}");
	}

	public void IfStmt.prettyPrint(PrintStream out, String ind) {
		getIfBlock().prettyPrint(out,ind);
		for(int i = 0; i<getNumElIfBlocks(); ++i) {
			out.print(" else ");
			getElIfBlocks(i).prettyPrint(out,ind);
		}
		if(hasElseBlock()) getElseBlock().prettyPrint(out,ind);
		out.println();
	}
	public void IfBlock.prettyPrint(PrintStream out, String ind) {
		out.print("if(");
		getCondition().prettyPrint(out,ind);
		out.println(") {");
		for(int i = 0; i<getNumStmt(); ++i) {
			out.print(ind + "  ");
			getStmt(i).prettyPrint(out, ind+"  ");
			out.println();
		}
		out.print(ind + "}");
	}
	public void ElseBlock.prettyPrint(PrintStream out, String ind) {
		out.print("else {");
		for(int i = 0; i<getNumStmt(); ++i) {
			out.print(ind + "  ");
			getStmt(i).prettyPrint(out, ind+"  ");
			out.println();
		}
		out.print(ind + "}");
	}

}
