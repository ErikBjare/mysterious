import java.util.HashSet;

aspect CallGraph {

    // Enclosing function
    inh Function Stmt.enclosingFunction();
    eq Function.getChild().enclosingFunction() = this;

    syn Set<Function> Function.functionCalls() {
        HashSet s = new HashSet();
        getBlock().registerFunctionCalls(s);
        return s;
    }

    public void ASTNode.registerFunctionCalls(Set s) {
        for(int i=0; i<getNumChild(); i++) {
            ASTNode node = getChild(i);
            node.registerFunctionCalls(s);
        }
    }

    public void FunctionCall.registerFunctionCalls(Set s) {
        for(Function f : functions()) {
            if(f.getIdDecl() == getName().decl()) {
                s.add(f);
            }
        }
    }

}
